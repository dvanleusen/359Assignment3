
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0004d5 	b	935c <main>

Disassembly of section .text:

0000935c <main>:
    935c:	e3a0d902 	mov	sp, #32768	; 0x8000
    9360:	eb0000a7 	bl	9604 <EnableJTAG>
    9364:	eb0000c9 	bl	9690 <InitUART>
    9368:	e59f0254 	ldr	r0, [pc, #596]	; 95c4 <haltLoop$+0x4>
    936c:	e3a01019 	mov	r1, #25
    9370:	eb000104 	bl	9788 <WriteStringUART>

00009374 <StartLoop>:
    9374:	e59f024c 	ldr	r0, [pc, #588]	; 95c8 <haltLoop$+0x8>
    9378:	e3a0102b 	mov	r1, #43	; 0x2b
    937c:	eb000101 	bl	9788 <WriteStringUART>
    9380:	e59f0244 	ldr	r0, [pc, #580]	; 95cc <haltLoop$+0xc>
    9384:	e3a01c01 	mov	r1, #256	; 0x100
    9388:	eb00010a 	bl	97b8 <ReadLineUART>
    938c:	e3500001 	cmp	r0, #1
    9390:	1a000028 	bne	9438 <Exception1>
    9394:	eb000031 	bl	9460 <Function1>
    9398:	eb000052 	bl	94e8 <I1Prompt>
    939c:	e59f622c 	ldr	r6, [pc, #556]	; 95d0 <haltLoop$+0x10>
    93a0:	e5964000 	ldr	r4, [r6]
    93a4:	e3a05000 	mov	r5, #0
    93a8:	ebffffff 	bl	93ac <Loop1>

000093ac <Loop1>:
    93ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    93b0:	e1550004 	cmp	r5, r4
    93b4:	0b00004b 	bleq	94e8 <I1Prompt>
    93b8:	e3550000 	cmp	r5, #0
    93bc:	0b000049 	bleq	94e8 <I1Prompt>
    93c0:	e3550001 	cmp	r5, #1
    93c4:	0b00004d 	bleq	9500 <I2Prompt>
    93c8:	e3550002 	cmp	r5, #2
    93cc:	0b000051 	bleq	9518 <I3Prompt>
    93d0:	e3550003 	cmp	r5, #3
    93d4:	0b000055 	bleq	9530 <I4Prompt>
    93d8:	e3550004 	cmp	r5, #4
    93dc:	0b000059 	bleq	9548 <I5Prompt>
    93e0:	e3550005 	cmp	r5, #5
    93e4:	0b00005d 	bleq	9560 <I6Prompt>
    93e8:	e3550006 	cmp	r5, #6
    93ec:	0b000061 	bleq	9578 <I7Prompt>
    93f0:	e3550007 	cmp	r5, #7
    93f4:	0b000065 	bleq	9590 <I8Prompt>
    93f8:	e3550008 	cmp	r5, #8
    93fc:	0b000069 	bleq	95a8 <I9Prompt>
    9400:	e59f01c4 	ldr	r0, [pc, #452]	; 95cc <haltLoop$+0xc>
    9404:	e3a01c01 	mov	r1, #256	; 0x100
    9408:	eb0000ea 	bl	97b8 <ReadLineUART>
    940c:	e3500001 	cmp	r0, #1
    9410:	ba00000c 	blt	9448 <Exception2>
    9414:	0b00001d 	bleq	9490 <FLength1>
    9418:	e3500002 	cmp	r0, #2
    941c:	0b000026 	bleq	94bc <FLength2>
    9420:	e3500003 	cmp	r0, #3
    9424:	ca000007 	bgt	9448 <Exception2>
    9428:	0b000026 	bleq	94c8 <FLength3>
    942c:	eaffffff 	b	9430 <forLoopInc>

00009430 <forLoopInc>:
    9430:	e2855001 	add	r5, r5, #1
    9434:	eaffffdc 	b	93ac <Loop1>

00009438 <Exception1>:
    9438:	e59f0194 	ldr	r0, [pc, #404]	; 95d4 <haltLoop$+0x14>
    943c:	e3a01015 	mov	r1, #21
    9440:	eb0000d0 	bl	9788 <WriteStringUART>
    9444:	eaffffca 	b	9374 <StartLoop>

00009448 <Exception2>:
    9448:	e59f0188 	ldr	r0, [pc, #392]	; 95d8 <haltLoop$+0x18>
    944c:	e3a01024 	mov	r1, #36	; 0x24
    9450:	eb0000cc 	bl	9788 <WriteStringUART>
    9454:	eaffffd4 	b	93ac <Loop1>

00009458 <loop1End>:
    9458:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    945c:	e12fff1e 	bx	lr

00009460 <Function1>:
    9460:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9464:	e59f3160 	ldr	r3, [pc, #352]	; 95cc <haltLoop$+0xc>
    9468:	e5d31000 	ldrb	r1, [r3]
    946c:	e2411030 	sub	r1, r1, #48	; 0x30
    9470:	e3510001 	cmp	r1, #1
    9474:	baffffef 	blt	9438 <Exception1>
    9478:	e3510009 	cmp	r1, #9
    947c:	caffffed 	bgt	9438 <Exception1>
    9480:	e59f2148 	ldr	r2, [pc, #328]	; 95d0 <haltLoop$+0x10>
    9484:	e5821000 	str	r1, [r2]
    9488:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    948c:	e12fff1e 	bx	lr

00009490 <FLength1>:
    9490:	e59f3134 	ldr	r3, [pc, #308]	; 95cc <haltLoop$+0xc>
    9494:	e5d31000 	ldrb	r1, [r3]
    9498:	e3510071 	cmp	r1, #113	; 0x71
    949c:	e3510051 	cmp	r1, #81	; 0x51
    94a0:	e351003a 	cmp	r1, #58	; 0x3a
    94a4:	aaffffe7 	bge	9448 <Exception2>
    94a8:	e2411030 	sub	r1, r1, #48	; 0x30
    94ac:	e3510009 	cmp	r1, #9
    94b0:	caffffe0 	bgt	9438 <Exception1>
    94b4:	e59f2120 	ldr	r2, [pc, #288]	; 95dc <haltLoop$+0x1c>
    94b8:	e5821000 	str	r1, [r2]

000094bc <FLength2>:
    94bc:	eafffff3 	b	9490 <FLength1>
    94c0:	e4d31001 	ldrb	r1, [r3], #1
    94c4:	eafffff1 	b	9490 <FLength1>

000094c8 <FLength3>:
    94c8:	e59f30fc 	ldr	r3, [pc, #252]	; 95cc <haltLoop$+0xc>
    94cc:	e4d31001 	ldrb	r1, [r3], #1
    94d0:	e3510001 	cmp	r1, #1
    94d4:	caffffdb 	bgt	9448 <Exception2>
    94d8:	e2411030 	sub	r1, r1, #48	; 0x30
    94dc:	e59f20f8 	ldr	r2, [pc, #248]	; 95dc <haltLoop$+0x1c>
    94e0:	e5821000 	str	r1, [r2]
    94e4:	eafffff4 	b	94bc <FLength2>

000094e8 <I1Prompt>:
    94e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    94ec:	e59f00ec 	ldr	r0, [pc, #236]	; 95e0 <haltLoop$+0x20>
    94f0:	e3a01021 	mov	r1, #33	; 0x21
    94f4:	eb0000a3 	bl	9788 <WriteStringUART>
    94f8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    94fc:	e12fff1e 	bx	lr

00009500 <I2Prompt>:
    9500:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9504:	e59f00d8 	ldr	r0, [pc, #216]	; 95e4 <haltLoop$+0x24>
    9508:	e3a01022 	mov	r1, #34	; 0x22
    950c:	eb00009d 	bl	9788 <WriteStringUART>
    9510:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9514:	e12fff1e 	bx	lr

00009518 <I3Prompt>:
    9518:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    951c:	e59f00c4 	ldr	r0, [pc, #196]	; 95e8 <haltLoop$+0x28>
    9520:	e3a01021 	mov	r1, #33	; 0x21
    9524:	eb000097 	bl	9788 <WriteStringUART>
    9528:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    952c:	e12fff1e 	bx	lr

00009530 <I4Prompt>:
    9530:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9534:	e59f00b0 	ldr	r0, [pc, #176]	; 95ec <haltLoop$+0x2c>
    9538:	e3a01022 	mov	r1, #34	; 0x22
    953c:	eb000091 	bl	9788 <WriteStringUART>
    9540:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9544:	e12fff1e 	bx	lr

00009548 <I5Prompt>:
    9548:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    954c:	e59f009c 	ldr	r0, [pc, #156]	; 95f0 <haltLoop$+0x30>
    9550:	e3a01021 	mov	r1, #33	; 0x21
    9554:	eb00008b 	bl	9788 <WriteStringUART>
    9558:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    955c:	e12fff1e 	bx	lr

00009560 <I6Prompt>:
    9560:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9564:	e59f0088 	ldr	r0, [pc, #136]	; 95f4 <haltLoop$+0x34>
    9568:	e3a01021 	mov	r1, #33	; 0x21
    956c:	eb000085 	bl	9788 <WriteStringUART>
    9570:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9574:	e12fff1e 	bx	lr

00009578 <I7Prompt>:
    9578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    957c:	e59f0074 	ldr	r0, [pc, #116]	; 95f8 <haltLoop$+0x38>
    9580:	e3a01023 	mov	r1, #35	; 0x23
    9584:	eb00007f 	bl	9788 <WriteStringUART>
    9588:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    958c:	e12fff1e 	bx	lr

00009590 <I8Prompt>:
    9590:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9594:	e59f0060 	ldr	r0, [pc, #96]	; 95fc <haltLoop$+0x3c>
    9598:	e3a01021 	mov	r1, #33	; 0x21
    959c:	eb000079 	bl	9788 <WriteStringUART>
    95a0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    95a4:	e12fff1e 	bx	lr

000095a8 <I9Prompt>:
    95a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    95ac:	e59f004c 	ldr	r0, [pc, #76]	; 9600 <haltLoop$+0x40>
    95b0:	e3a01021 	mov	r1, #33	; 0x21
    95b4:	eb000073 	bl	9788 <WriteStringUART>
    95b8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    95bc:	e12fff1e 	bx	lr

000095c0 <haltLoop$>:
    95c0:	eafffffe 	b	95c0 <haltLoop$>
    95c4:	00009080 	.word	0x00009080
    95c8:	00009099 	.word	0x00009099
    95cc:	0000922a 	.word	0x0000922a
    95d0:	0000934e 	.word	0x0000934e
    95d4:	000091f1 	.word	0x000091f1
    95d8:	00009206 	.word	0x00009206
    95dc:	0000932a 	.word	0x0000932a
    95e0:	000090c4 	.word	0x000090c4
    95e4:	000090e5 	.word	0x000090e5
    95e8:	00009107 	.word	0x00009107
    95ec:	00009128 	.word	0x00009128
    95f0:	0000914a 	.word	0x0000914a
    95f4:	0000916b 	.word	0x0000916b
    95f8:	0000918c 	.word	0x0000918c
    95fc:	000091af 	.word	0x000091af
    9600:	000091d0 	.word	0x000091d0

00009604 <EnableJTAG>:
    9604:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9608:	e59f0064 	ldr	r0, [pc, #100]	; 9674 <dowaitloop+0xc>
    960c:	e0211001 	eor	r1, r1, r1
    9610:	e5801000 	str	r1, [r0]
    9614:	eb000012 	bl	9664 <dowait>
    9618:	e59f0058 	ldr	r0, [pc, #88]	; 9678 <dowaitloop+0x10>
    961c:	e59f1058 	ldr	r1, [pc, #88]	; 967c <dowaitloop+0x14>
    9620:	e5801000 	str	r1, [r0]
    9624:	eb00000e 	bl	9664 <dowait>
    9628:	e0211001 	eor	r1, r1, r1
    962c:	e5801000 	str	r1, [r0]
    9630:	e59f0048 	ldr	r0, [pc, #72]	; 9680 <dowaitloop+0x18>
    9634:	e5901000 	ldr	r1, [r0]
    9638:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    963c:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9640:	e5801000 	str	r1, [r0]
    9644:	e59f0038 	ldr	r0, [pc, #56]	; 9684 <dowaitloop+0x1c>
    9648:	e5901000 	ldr	r1, [r0]
    964c:	e59f2034 	ldr	r2, [pc, #52]	; 9688 <dowaitloop+0x20>
    9650:	e1c11002 	bic	r1, r1, r2
    9654:	e59f2030 	ldr	r2, [pc, #48]	; 968c <dowaitloop+0x24>
    9658:	e1811002 	orr	r1, r1, r2
    965c:	e5801000 	str	r1, [r0]
    9660:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009664 <dowait>:
    9664:	e3a02f4b 	mov	r2, #300	; 0x12c

00009668 <dowaitloop>:
    9668:	e2522001 	subs	r2, r2, #1
    966c:	1afffffd 	bne	9668 <dowaitloop>
    9670:	e12fff1e 	bx	lr
    9674:	3f200094 	.word	0x3f200094
    9678:	3f200098 	.word	0x3f200098
    967c:	0bc00010 	.word	0x0bc00010
    9680:	3f200000 	.word	0x3f200000
    9684:	3f200008 	.word	0x3f200008
    9688:	00e3ffc0 	.word	0x00e3ffc0
    968c:	0061b6c0 	.word	0x0061b6c0

00009690 <InitUART>:
    9690:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9694:	e59f017c 	ldr	r0, [pc, #380]	; 9818 <WaitForCycles+0x10>
    9698:	e3a01001 	mov	r1, #1
    969c:	e5801000 	str	r1, [r0]
    96a0:	e59f0174 	ldr	r0, [pc, #372]	; 981c <WaitForCycles+0x14>
    96a4:	e0211001 	eor	r1, r1, r1
    96a8:	e5801000 	str	r1, [r0]
    96ac:	e59f016c 	ldr	r0, [pc, #364]	; 9820 <WaitForCycles+0x18>
    96b0:	e0211001 	eor	r1, r1, r1
    96b4:	e5801000 	str	r1, [r0]
    96b8:	e59f0164 	ldr	r0, [pc, #356]	; 9824 <WaitForCycles+0x1c>
    96bc:	e3a01003 	mov	r1, #3
    96c0:	e5801000 	str	r1, [r0]
    96c4:	e59f015c 	ldr	r0, [pc, #348]	; 9828 <WaitForCycles+0x20>
    96c8:	e0211001 	eor	r1, r1, r1
    96cc:	e5801000 	str	r1, [r0]
    96d0:	e59f0144 	ldr	r0, [pc, #324]	; 981c <WaitForCycles+0x14>
    96d4:	e0211001 	eor	r1, r1, r1
    96d8:	e5801000 	str	r1, [r0]
    96dc:	e59f0148 	ldr	r0, [pc, #328]	; 982c <WaitForCycles+0x24>
    96e0:	e3a010c6 	mov	r1, #198	; 0xc6
    96e4:	e5801000 	str	r1, [r0]
    96e8:	e59f0140 	ldr	r0, [pc, #320]	; 9830 <WaitForCycles+0x28>
    96ec:	e59f1140 	ldr	r1, [pc, #320]	; 9834 <WaitForCycles+0x2c>
    96f0:	e5801000 	str	r1, [r0]
    96f4:	e3a0000e 	mov	r0, #14
    96f8:	e3a01002 	mov	r1, #2
    96fc:	eb000053 	bl	9850 <SetGpioFunction>
    9700:	e3a0000f 	mov	r0, #15
    9704:	e3a01002 	mov	r1, #2
    9708:	eb000050 	bl	9850 <SetGpioFunction>
    970c:	e59f0124 	ldr	r0, [pc, #292]	; 9838 <WaitForCycles+0x30>
    9710:	e0211001 	eor	r1, r1, r1
    9714:	e5801000 	str	r1, [r0]
    9718:	e3a00096 	mov	r0, #150	; 0x96
    971c:	eb000039 	bl	9808 <WaitForCycles>
    9720:	e59f0114 	ldr	r0, [pc, #276]	; 983c <WaitForCycles+0x34>
    9724:	e3a01903 	mov	r1, #49152	; 0xc000
    9728:	e5801000 	str	r1, [r0]
    972c:	e3a00096 	mov	r0, #150	; 0x96
    9730:	eb000034 	bl	9808 <WaitForCycles>
    9734:	e59f0100 	ldr	r0, [pc, #256]	; 983c <WaitForCycles+0x34>
    9738:	e0211001 	eor	r1, r1, r1
    973c:	e5801000 	str	r1, [r0]
    9740:	e59f00d8 	ldr	r0, [pc, #216]	; 9820 <WaitForCycles+0x18>
    9744:	e3a01003 	mov	r1, #3
    9748:	e5801000 	str	r1, [r0]
    974c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009750 <PutCharUART>:
    9750:	e59f20e8 	ldr	r2, [pc, #232]	; 9840 <WaitForCycles+0x38>

00009754 <putWaitLoop$>:
    9754:	e5921000 	ldr	r1, [r2]
    9758:	e3110020 	tst	r1, #32
    975c:	0afffffc 	beq	9754 <putWaitLoop$>
    9760:	e59f20dc 	ldr	r2, [pc, #220]	; 9844 <WaitForCycles+0x3c>
    9764:	e5820000 	str	r0, [r2]
    9768:	e1a0f00e 	mov	pc, lr

0000976c <GetCharUART>:
    976c:	e59f20cc 	ldr	r2, [pc, #204]	; 9840 <WaitForCycles+0x38>

00009770 <getWaitLoop$>:
    9770:	e5921000 	ldr	r1, [r2]
    9774:	e3110001 	tst	r1, #1
    9778:	0afffffc 	beq	9770 <getWaitLoop$>
    977c:	e59f20c0 	ldr	r2, [pc, #192]	; 9844 <WaitForCycles+0x3c>
    9780:	e5920000 	ldr	r0, [r2]
    9784:	e1a0f00e 	mov	pc, lr

00009788 <WriteStringUART>:
    9788:	e92d4030 	push	{r4, r5, lr}
    978c:	e1a04000 	mov	r4, r0
    9790:	e1a05001 	mov	r5, r1
    9794:	e3a06000 	mov	r6, #0

00009798 <writeLoop$>:
    9798:	e3550000 	cmp	r5, #0
    979c:	da000004 	ble	97b4 <writeLoopEnd$>
    97a0:	e7d40006 	ldrb	r0, [r4, r6]
    97a4:	ebffffe9 	bl	9750 <PutCharUART>
    97a8:	e2866001 	add	r6, r6, #1
    97ac:	e2455001 	sub	r5, r5, #1
    97b0:	eafffff8 	b	9798 <writeLoop$>

000097b4 <writeLoopEnd$>:
    97b4:	e8bd8030 	pop	{r4, r5, pc}

000097b8 <ReadLineUART>:
    97b8:	e92d4070 	push	{r4, r5, r6, lr}
    97bc:	e1a04000 	mov	r4, r0
    97c0:	e1a05001 	mov	r5, r1
    97c4:	e3a06000 	mov	r6, #0

000097c8 <readLoop$>:
    97c8:	e1360005 	teq	r6, r5
    97cc:	0a00000b 	beq	9800 <readLoopEnd$>
    97d0:	ebffffe5 	bl	976c <GetCharUART>
    97d4:	ebffffdd 	bl	9750 <PutCharUART>
    97d8:	e5c40000 	strb	r0, [r4]
    97dc:	e2866001 	add	r6, r6, #1
    97e0:	e2844001 	add	r4, r4, #1
    97e4:	e330000d 	teq	r0, #13
    97e8:	1afffff6 	bne	97c8 <readLoop$>
    97ec:	e3a0000a 	mov	r0, #10
    97f0:	ebffffd6 	bl	9750 <PutCharUART>
    97f4:	e2444001 	sub	r4, r4, #1
    97f8:	e3a00000 	mov	r0, #0
    97fc:	e5c40000 	strb	r0, [r4]

00009800 <readLoopEnd$>:
    9800:	e2460001 	sub	r0, r6, #1
    9804:	e8bd8070 	pop	{r4, r5, r6, pc}

00009808 <WaitForCycles>:
    9808:	e2400001 	sub	r0, r0, #1
    980c:	e3500000 	cmp	r0, #0
    9810:	aafffffc 	bge	9808 <WaitForCycles>
    9814:	e1a0f00e 	mov	pc, lr
    9818:	3f215004 	.word	0x3f215004
    981c:	3f215044 	.word	0x3f215044
    9820:	3f215060 	.word	0x3f215060
    9824:	3f21504c 	.word	0x3f21504c
    9828:	3f215050 	.word	0x3f215050
    982c:	3f215048 	.word	0x3f215048
    9830:	3f215068 	.word	0x3f215068
    9834:	0000010e 	.word	0x0000010e
    9838:	3f200094 	.word	0x3f200094
    983c:	3f200098 	.word	0x3f200098
    9840:	3f215054 	.word	0x3f215054
    9844:	3f215040 	.word	0x3f215040

00009848 <GetGpioAddress>:
    9848:	e59f00cc 	ldr	r0, [pc, #204]	; 991c <GetGpio+0x44>
    984c:	e1a0f00e 	mov	pc, lr

00009850 <SetGpioFunction>:
    9850:	e3500035 	cmp	r0, #53	; 0x35
    9854:	93510007 	cmpls	r1, #7
    9858:	81a0f00e 	movhi	pc, lr
    985c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9860:	e1a02000 	mov	r2, r0
    9864:	ebfffff7 	bl	9848 <GetGpioAddress>

00009868 <functionLoop$>:
    9868:	e3520009 	cmp	r2, #9
    986c:	8242200a 	subhi	r2, r2, #10
    9870:	82800004 	addhi	r0, r0, #4
    9874:	8afffffb 	bhi	9868 <functionLoop$>
    9878:	e0822082 	add	r2, r2, r2, lsl #1
    987c:	e1a01211 	lsl	r1, r1, r2
    9880:	e3a03007 	mov	r3, #7
    9884:	e1a03213 	lsl	r3, r3, r2
    9888:	e5902000 	ldr	r2, [r0]
    988c:	e1c22003 	bic	r2, r2, r3
    9890:	e1811002 	orr	r1, r1, r2
    9894:	e5801000 	str	r1, [r0]
    9898:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000989c <SetGpio>:
    989c:	e3500035 	cmp	r0, #53	; 0x35
    98a0:	81a0f00e 	movhi	pc, lr
    98a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    98a8:	e1a02000 	mov	r2, r0
    98ac:	ebffffe5 	bl	9848 <GetGpioAddress>
    98b0:	e1a032a2 	lsr	r3, r2, #5
    98b4:	e1a03103 	lsl	r3, r3, #2
    98b8:	e0800003 	add	r0, r0, r3
    98bc:	e202201f 	and	r2, r2, #31
    98c0:	e3a03001 	mov	r3, #1
    98c4:	e1a03213 	lsl	r3, r3, r2
    98c8:	e3310000 	teq	r1, #0
    98cc:	05803028 	streq	r3, [r0, #40]	; 0x28
    98d0:	1580301c 	strne	r3, [r0, #28]
    98d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000098d8 <GetGpio>:
    98d8:	e3500035 	cmp	r0, #53	; 0x35
    98dc:	81a0f00e 	movhi	pc, lr
    98e0:	e92d4010 	push	{r4, lr}
    98e4:	e1a04000 	mov	r4, r0
    98e8:	ebffffd6 	bl	9848 <GetGpioAddress>
    98ec:	e1a032a4 	lsr	r3, r4, #5
    98f0:	e1a03103 	lsl	r3, r3, #2
    98f4:	e0800003 	add	r0, r0, r3
    98f8:	e204401f 	and	r4, r4, #31
    98fc:	e3a03001 	mov	r3, #1
    9900:	e1a03413 	lsl	r3, r3, r4
    9904:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    9908:	e0044003 	and	r4, r4, r3
    990c:	e3340000 	teq	r4, #0
    9910:	03a00000 	moveq	r0, #0
    9914:	13a00001 	movne	r0, #1
    9918:	e8bd8010 	pop	{r4, pc}
    991c:	3f200000 	.word	0x3f200000
